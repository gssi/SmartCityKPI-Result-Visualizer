@namespace(uri="http://cs.gssi.it/smartcity", prefix="smartcity")
package smartcity;

class SmartCityModel {
  val SmartCity[*] smartCities;
}

class SmartCity {
  attr String city;
  val stakeholder.Stakeholder[*] stakeholders;
  val DataAnalytics.DataPackage[*] data;
  val infrastructure.PublicInfrastructureLayer infrastructurelayer;
}

@namespace(uri="http://cs.gssi.it/smartcity/dataanalytics", prefix="DataAnalytics")
package DataAnalytics {

  abstract class Data {
    attr String name;
    attr String unit;
    ref Source src;
  }

  class RealValue extends Data {
    attr double value;
  }

  class BoolValue extends Data {
    attr boolean value;
  }

  class IntegerValue extends Data {
    attr int value;
  }

  class DataPackage {
    attr String name;
    val Data[*] data;
  }

  abstract class Source {
  }

  class SocialMedia extends Source {
    attr String url;
    attr String name;
  }

  class OpenData extends Source {
    attr String url;
    attr String name;
  }

  class ProvidedData extends Source {
    ref stakeholder.Stakeholder[*] provider;
  }

}

@namespace(uri="http://cs.gssi.it/smartcity/infrastructure", prefix="infrastructure")
package infrastructure {
  class MonitoringInfrastructure extends DataAnalytics.Source, InfrastructureComponent {
    val IoTDev[*] devices;
  }

  class Sensor extends IoTDev {
  }

  class Actuator extends IoTDev {
  }

  abstract class IoTDev {
    attr String model;
    attr String location;
  }

  class PublicInfrastructureLayer {
    attr String name;
    val InfrastructureComponent[*] components;
  }

  class InfrastructureComponent {
    attr String name;
  }

}

@namespace(uri="http://cs.gssi.it/smartcity/stakeholder", prefix="stakeholder")
package stakeholder {
  class Stakeholder extends DataAnalytics.Source {
    attr String name;
    attr String organization;
  }

}

